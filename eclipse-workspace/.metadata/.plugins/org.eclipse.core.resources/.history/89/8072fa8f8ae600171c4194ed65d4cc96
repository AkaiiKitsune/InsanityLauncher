package insanity.Boostrap;

import static fr.theshark34.swinger.Swinger.getResource;
import static fr.theshark34.swinger.Swinger.getTransparentWhite;
import static fr.theshark34.swinger.Swinger.setResourcePath;

import java.io.File;

import fr.theshark34.openlauncherlib.bootstrap.LauncherClasspath;
import fr.theshark34.openlauncherlib.bootstrap.LauncherInfos;
import fr.theshark34.openlauncherlib.minecraft.util.GameDirGenerator;
import fr.theshark34.openlauncherlib.util.ErrorUtil;
import fr.theshark34.openlauncherlib.util.SplashScreen;
import fr.theshark34.supdate.BarAPI;
import fr.theshark34.supdate.SUpdate;
import fr.theshark34.swinger.colored.SColoredBar;

public class InsanityBootstrap {
	
	private static SplashScreen splash;
	private static SColoredBar bar;
	private static Thread barThread;
	
	private static final LauncherInfos IF_B_INFOS = new LauncherInfos("Insanity", "insanity.Launcher.LauncherFrame");
	private static final File IF_DIR = new File(GameDirGenerator.createGameDir("Insanity"), "Launcher");
	private static final LauncherClasspath IF_B_CP = new LauncherClasspath(new File(IF_DIR, "Launcher/launcher.jar"), new File(IF_DIR, "Launcher/Libs/"));
	private static ErrorUtil errorutil = new ErrorUtil(new File(IF_DIR, "Launcher/crashes"));
	
	public static void main(String [] args) 
	{
		setResourcePath("/insanity/Boostrap/Resource");
		displaySplash();
		try
		{
		doUpdate();
		} catch (Exception e) {
			errorutil.catchError(e, "impossible de mettre a jour le launcher !");
			barThread.interrupt();
		}
		launchLauncher();
	}

	private static void displaySplash() {
		splash = new SplashScreen("Insanity", getResource("splash.png"));
		
		bar = new SColoredBar(getTransparentWhite(100), getTransparentWhite(175)); 
		bar.setBounds(0, 490, 350, 20);
		splash.add(bar);
		
		splash.setVisible(true);
	}
	
	private static void doUpdate() throws Exception {
		SUpdate su = new SUpdate("http://s-update.officielity.fr/insanityBootstrap/", new File(IF_DIR, "Launcher"));
		
		barThread = new Thread() {
			@Override
			public void run() {
				while(!this.isInterrupted()) {
					bar.setValue((int)(BarAPI.getNumberOfTotalDownloadedBytes() / 1000));
					bar.setMaximum((int)(BarAPI.getNumberOfTotalBytesToDownload() / 1000));
				}
			}
		};
		barThread.start();
		
		su.start();
		barThread.interrupt();
	}
	
	private static void launchLauncher() throws Exception {
		
	}
}
